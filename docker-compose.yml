version: '3.8'   # Version du format Docker Compose utilisé

services:        # Définition des services/containeurs Docker

  php:           # Service PHP pour exécuter le code backend
    build: .     # Utilise ton Dockerfile personnalisé
    container_name: ecoride-php
    volumes:
      - ./app:/var/www/app
      - ./public:/var/www/public
      - ./config:/var/www/config
    networks:
      - ecoride-network

  nginx:         # Service Nginx servant ton site web
    image: nginx:latest
    container_name: ecoride-nginx
    ports:
      - "8080:80"
    volumes:
      - ./public:/var/www/public
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
    networks:
      - ecoride-network

  mysql:         # Service MySQL
    image: mysql:8.0
    container_name: ecoride-mysql
    ports:
      - "3306:3306"
    environment:                     # ✅ SECTION ENVIRONMENT CORRECTE
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: EcoRide
      MYSQL_USER: ecoride
      MYSQL_PASSWORD: ecoridepass
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - ecoride-network

  mongo:         # Service MongoDB
    image: mongo:6.0
    container_name: ecoride-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - ecoride-network

networks:         # Déclaration du réseau Docker
  ecoride-network:

volumes:          # Déclaration des volumes Docker
  mongo-data:
  mysql-data:
