# Render blueprint for the Ecoride stack

# This file describes a multi‑service architecture for the Ecoride application.
# It breaks the original `docker‑compose` stack into individual services
# supported by Render.  The PHP web service is deployed via Docker and
# connects to separate MySQL and MongoDB private services.  Persistent
# disks are provisioned for each database, and sensitive secrets are
# managed via Render’s UI (marked with `sync: false`).

services:
  # PHP web service exposing your API and serving your application.  This
  # container is built from the repository that contains this render.yaml
  # file.  Render automatically detects that you are using a Dockerfile
  # and builds the image accordingly.  The service binds its HTTP server
  # to the port defined by the PORT environment variable provided by Render.
  - type: web
    name: ecoride-php
    env: docker
    plan: free
    # If your repository lives somewhere other than the same repo as this
    # render.yaml file, specify it here.  Otherwise omit this field and
    # Render will use the current repository.
    # repo: https://github.com/your-org/your-ecoride-repo
    
    # To improve cold‑start performance, disable autoDeploy until you are
    # ready to roll out new versions.  You can switch to `true` once
    # everything is stable.
    autoDeploy: false
    
    envVars:
    - key: MYSQL_HOST
      fromService:
        name: ecoride-mysql
        type: pserv
        property: host
    - key: MYSQL_PORT
      value: "3306"
    - key: MYSQL_DATABASE
      value: EcoRide
    - key: MYSQL_USER
      value: ecoride
    - key: MYSQL_PASSWORD
      sync: false
    # MongoDB connection parameters.  These values will be used by your
    # application code to construct the MongoDB URI.  Render does not
    # support variable interpolation in YAML, so combine these at
    # runtime in your PHP code or set a full URI below instead.
    - key: MONGODB_HOST
      fromService:
        name: ecoride-mongo
        type: pserv
        property: host
    - key: MONGODB_PORT
      fromService:
        name: ecoride-mongo
        type: pserv
        property: port
    - key: MONGODB_USERNAME
      value: ecoride
    - key: MONGODB_PASSWORD
      sync: false
      # If your application expects a single `MONGODB_URI` variable, you
      # can hardcode it using the service name as the host.  Replace
      # `<yourMongoPassword>` with the same value you set for
      # `MONGODB_PASSWORD` when prompted in the dashboard.
      # - key: MONGODB_URI
      #   value: mongodb://ecoride:<yourMongoPassword>@ecoride-mongo:27017/admin

    # Optional persistent disk for file‑based PHP sessions.  If your
    # application writes session files to `/tmp/sessions` you can
    # uncomment this section.  Adjust the sizeGB as needed.
    # disk:
    #   name: session-storage
    #   mountPath: /tmp/sessions
    #   sizeGB: 1

  # MySQL private service.  This service runs a standalone MySQL
  # instance inside your Render private network.  It is not exposed
  # publicly, but other services in your workspace can connect to it.
  - type: pserv
    name: ecoride-mysql
    env: docker
    plan: starter
    repo: https://github.com/render-examples/mysql
    branch: master
    autoDeploy: false
    disk:
      name: mongo-data
      mountPath: /data/db
      sizeGB: 10
    envVars:
      - key: MYSQL_DATABASE
        value: Ecoride
      - key: MYSQL_USER
        value: ecoride
      - key: MYSQL_PASSWORD
        sync: false
      - key: MYSQL_ROOT_PASSWORD
        sync: false

  # MongoDB private service.  This service uses the official MongoDB
  # Docker image via Render’s example repository.  It runs inside the
  # private network and exposes port 27017 to other services.
  - type: pserv
    name: ecoride-mongo
    env: docker
    plan: starter
    repo: https://github.com/render-examples/mongodb
    branch: master
    autoDeploy: false
    disk:
      name: mongo-data
      mountPath: /data/db
      sizeGB: 10
    envVars:
      - key: MONGO_INITDB_ROOT_USERNAME
        value: ecoride
      - key: MONGO_INITDB_ROOT_PASSWORD
        sync: false